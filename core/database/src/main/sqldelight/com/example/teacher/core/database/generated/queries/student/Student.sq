getBasicStudentById:
SELECT
    s.id,
    s.register_number,
    s.school_class_id,
    s.name,
    s.surname,
    s.email,
    s.phone
FROM student s
WHERE s.id = :id;

getStudentById:
SELECT
    s.id,
    s.register_number,
    s.school_class_id,
    s.name,
    s.surname,
    s.email,
    s.phone,
    sc.name AS 'school_class_name',
    sy.id AS 'school_year_id',
    sy.name AS 'school_year_name',
    sy.term_first_id AS 'term_first_id',
    sy.term_second_id AS 'term_second_id',
    t1.name AS 'term_first_name',
    t1.start_date AS 'term_first_start_date',
    t1.end_date AS 'term_first_end_date',
    t2.name AS 'term_second_name',
    t2.start_date AS 'term_second_start_date',
    t2.end_date AS 'term_second_end_date',
    (SELECT COUNT(*) FROM student s WHERE s.school_class_id = sc.id) AS 'student_count',
    (SELECT COUNT(*) FROM lesson l WHERE l.school_class_id = sc.id) AS 'lesson_count'
FROM student s
INNER JOIN school_class sc ON s.school_class_id = sc.id
INNER JOIN school_year sy ON sc.school_year_id = sy.id
INNER JOIN term t1 ON sy.term_first_id = t1.id
INNER JOIN term t2 ON sy.term_second_id = t2.id
WHERE s.id = :id;

getStudentsBySchoolClassId:
SELECT
    s.id,
    s.register_number,
    s.school_class_id,
    s.name,
    s.surname,
    s.email,
    s.phone
FROM student s
INNER JOIN school_class sc ON s.school_class_id = sc.id
WHERE sc.id = :id
ORDER BY s.register_number;

getStudentByRegisterNumber:
SELECT
    s.id,
    s.register_number
FROM student s
INNER JOIN school_class sc ON s.school_class_id = sc.id
WHERE sc.id = :school_class_id AND s.register_number = :register_number;

getUsedRegisterNumbersBySchoolClassId:
SELECT
    s.register_number AS 'register_number'
FROM student s
INNER JOIN school_class sc ON s.school_class_id = sc.id
WHERE sc.id = :id;

getStudentMaxRegisterNumberBySchoolClassId:
SELECT
    MAX(s.register_number) AS 'max_register_number'
FROM student s
INNER JOIN school_class sc ON s.school_class_id = sc.id
WHERE sc.id = :id;

getStudentNameById:
SELECT
    s.name,
    s.surname
FROM student s
WHERE s.id = :id;

getStudentGradesById:
SELECT
    s.id AS 'student_id',
    l.id AS 'lesson_id',
    l.name AS 'lesson_name',
    gt.id AS 'grade_template_id',
    gt.name AS 'grade_template_name',
    gt.weight AS 'grade_template_weight',
    gt.is_first_term AS 'grade_is_first_term',
    gt.date AS 'grade_template_date',
    g.id AS 'grade_id',
    g.grade AS 'grade',
    sc.id AS 'school_class_id',
    sc.name AS 'school_class_name',
    sy.id AS 'school_year_id',
    sy.name AS 'school_year_name',
    sy.term_first_id AS 'term_first_id',
    sy.term_second_id AS 'term_second_id',
    t1.name AS 'term_first_name',
    t1.start_date AS 'term_first_start_date',
    t1.end_date AS 'term_first_end_date',
    t2.name AS 'term_second_name',
    t2.start_date AS 'term_second_start_date',
    t2.end_date AS 'term_second_end_date',
    (SELECT COUNT(*) FROM student s WHERE s.school_class_id = sc.id) AS 'student_count',
    (SELECT COUNT(*) FROM lesson l WHERE l.school_class_id = sc.id) AS 'lesson_count'
FROM student s
INNER JOIN school_class sc ON sc.id = s.school_class_id
INNER JOIN school_year sy ON sc.school_year_id = sy.id
INNER JOIN term t1 ON sy.term_first_id = t1.id
INNER JOIN term t2 ON sy.term_second_id = t2.id
INNER JOIN lesson l ON sc.id = l.school_class_id
INNER JOIN grade_template gt ON gt.lesson_id = l.id
LEFT JOIN grade g ON g.student_id = s.id AND g.grade_template_id = gt.id
WHERE s.id = :id;

insertStudent:
INSERT OR FAIL
INTO student
VALUES (?, ?, ?, ?, ?, ?, ?);

updateStudent:
UPDATE student
SET
    name = :name,
    surname = :surname,
    email = :email,
    phone = :phone,
    register_number = :register_number
WHERE id = :id;

updateStudentRegisterNumberById:
UPDATE student
SET
    register_number = :register_number
WHERE id= :id;

deleteStudentById:
DELETE FROM student
WHERE id = :id;